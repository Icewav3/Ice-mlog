"issue with units sitting waiting for otehrs to deposit before going back to mining"
on:
    jump on equal sorter1 null
    sensor config sorter1 @config
    jump on strictEqual config null
    sensor config sorter1 @config
    jump type equal u_type null
    jump type notEqual config prevconfig
    jump bind always x false

type:
    jump pulsar equal config @copper
    jump mono equal config @lead
    jump poly equal config @graphite
    jump mega equal config @sand
    jump quasar equal config @coal
    jump rankedpoly equal config @titanium
    jump rankedmega equal config @thorium
    jump type always x false

    pulsar:
        set u_type @pulsar
        set icon "Pulsar"
        set u_cap 40
        set ground true
        set maxmine @coal
        jump bind always x false

    mono:
        set u_type @mono
        set icon "Mono"
        set u_cap 20
        set ground false
        set maxmine @sand
        jump bind always x false

    poly:
        set u_type @poly
        set icon "Poly"
        set u_cap 30
        set ground false
        set maxmine @coal
        jump bind always x false

    mega:
        set u_type @mega
        set icon "Mega"
        set u_cap 60
        set ground false
        set maxmine @titanium
        jump bind always x false

    quasar:
        set u_type @quasar
        set icon "Quasar"
        set u_cap 50
        set ground true
        set maxmine @titanium
        jump bind always x false

    rankedpoly: 
        set u_type @poly
        set icon "Ranked Poly"
        set u_cap 30
        set ground true
        set maxmine @titanium
        jump bind always x false

    rankedmega: 
        set u_type @mega
        set icon "Ranked Mega"
        set u_cap 60
        set ground true
        set maxmine @thorium
        jump bind always x false

bind:
    ubind u_type
    sensor c @unit @controlled
    sensor f @unit @flag
    jump start strictEqual c 0
    jump bind notEqual f 0

start:
    set prevconfig config
    sensor ded core @dead
    jump core strictEqual cx null
    jump resource notEqual ded true

    core:
        ucontrol boost 1 
        ucontrol move @thisx @thisy 0 0 0
        ucontrol within @thisx @thisy 3 here 0
        jump on notEqual here true
        ulocate building core false @copper cx cy found core

resource:
    op sub timer mining_timer @time
    op div percent timer 50
    op sub percent 100 percent
    op floor percent percent
    print "[green]Current unit: "
    print icon
    print "\n[orange]Mining: "
    print item
    print "[red]\nPercentage: "
    print percent
    print "%\n[white]"
    print "By: [cyan]Ice[blue]wave[sky]#0394"
    print " [white] and WiZeR1233#9336"
    printflush

    jump lowres strictEqual item null
    jump mine greaterThan timer 0

lowres:
    op add mining_timer @time 5000
    sensor copper core @copper
    sensor lead core @lead
    sensor sand core @sand
    sensor coal core @coal
    sensor titan core @titanium
    sensor thor core @thorium
    sensor item_amount core last

    checkcopper:
        jump boot strictEqual last null
        jump checklead lessThan item_amount copper

        boot:
            set item_amount copper
            set item @copper

    checklead:
        jump checksand lessThan item_amount lead
        set item @lead
        set item_amount lead

    checksand:
        jump checkcoal lessThan item_amount sand
        set item @sand
        set item_amount sand

    checkcoal:
        jump mine equal maxmine @sand
        jump checktitan lessThan item_amount coal
        set item @coal
        set item_amount coal

    checktitan:
        jump mine equal maxmine @coal
        jump checkthor lessThan item_amount titan
        set item @titanium
        set item_amount titanium

    checkthor:
        jump mine equal maxmine @titanium
        jump mine lessThan item_amount thor
        set item @thorium
        set item_amount thorium

mine:
    jump locate strictEqual last item
    set last item
    ulocate ore core true item x y found building
    jump locate equal found true
    op add y @thisy 1
    set x @thisx

locate:
    sensor items @unit item
    jump empty strictEqual items u_cap
    sensor type @unit @firstItem
    sensor total @unit @totalItems
    jump dig strictEqual total 0
    jump empty notEqual type item

    dig:
        ucontrol boost 1
        ucontrol approach x y 7
        ucontrol mine x y
        end

empty:
    ucontrol boost 1
    ucontrol approach cx cy 7
    ucontrol itemDrop core u_cap
    ucontrol mine 0 0
    end
